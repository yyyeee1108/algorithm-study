# 튜플 정리

# 한 번 선언된 값 변경 불가
# 소괄호 () 이용
# 기능 적음 -> 리스트에 비해 상대적으로 공간 효율적 => 메모리 적게 씀

# 튜플을 사용하면 좋은 경우
# 1. 서로 다른 성질의 데이터를 묶어서 관리해야 할 때
# - 최단 경로 알고리즘에서 (비용, 노드 번호)의 형태로 튜플 자료형 자주 사용

# 2. 데이터의 나열을 해싱(Hashing)의 키 값으로 사용해야 할 때
# - 튜플은 변경이 불가능하므로 리스트와 다르게 키 값으로 사용 O(키 값은 변경 불가능해야함)

# 3. 리스트보다 메모리를 효율적으로 사용해야 할 때




# 기본적으로 리스트와 사용법 거의 유사
# a = (i for i in range(1,10)) -> 리스트 컴프리헨션과 같이 초기화는 불가능한 것으로 확인
# a = tuple(list((i for i in range(1,10)))) -> 이렇게 형 변환 통해 초기화는 또 된다.

a = (1,2,3,4,5,6,7,8,9)

# 네 번째 원소만 출력(인덱싱)
print(a[3])

# 두 번째 원소부터 네 번째 원소까지(슬라이싱)
print(a[1:4])

# a[2] = 7 과 같이 특정 원소 변경 불가