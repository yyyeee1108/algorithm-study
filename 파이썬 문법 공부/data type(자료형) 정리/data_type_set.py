# 집합 자료형 정리

# 집합의 특징
# - 중복 허용X
# - 순서X
# => 따라서 특정 데이터의 존재 유/무 확인시 유용하게 사용됨

# 초기화 방법1
# 리스트 or 문자열을 이용하여 초기화 가능
# set() 함수를 같이 이용한다
data = set([1,1,2,3,4,4,5]) # 중복을 걸러준다
print("집합 자료형 초기화1:",data) 

# 초기화 방법2
# 중괄호({}) 안에 각 원소를 콤마(,)를 기준으로 구분하여 삽입하여 초기화 
data = {1,1,2,3,4,4,5} # 마찬가지로 중복 걸러줌
print(data)

# 시간복잡도 'O(1)' (데이터의 조회 및 수정에 있어서)


# 집합 자료형 연산(합/교/차 집합)
a = set([1,2,3,4,5])
b = set([3,4,5,6,7])
print(f"기존 집합: a - {a} b - {b}")
# 합집합(or로 연산)
print("합집합:",a|b) 

# 교집합(and로 연산)
print("교집합:",a&b)

# 차집합(-로 연산)
print("차집합:",a-b)


# 집합 자료형 관련 메서드 3가지
data = {1,2,3}
print("기존 집합:",data)
# 1. add() : 새로운 원소 추가
data.add(4)
print("원소 추가:",data)
# 2. update() : 새로운 원소 여러 개 추가
data.update([5,6])
print("원소 여러 개 추가:",data)
# 3. remove() : 특정한 값 갖는 원소 삭제
data.remove(3)
print("원소 삭제:",data)