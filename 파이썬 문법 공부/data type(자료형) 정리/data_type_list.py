# 리스트 사용 정리

# 초기화 방법 정리
# 1. 직접 데이터를 넣어 초기화하기
a = [1,2,3,4,5,6,7,8,9]
print("직접 데이터 넣어 초기화:",a)

# 2. 같은 값 여러 개 -> 곱 이용해서 초기화하는 방법
n = 10
a = [0]*n
print("같은 값 여러 개 곱 이용 초기화:",a)

# 3. 리스트 컴프리헨션 이용
# 대괄호 안에 조건문과 반복문을 적용하여 리스트 초기화
# 대괄호 먼저 만들고 -> 반복문 쓰고 -> 리스트 안에 들어갈 형태 입력
# 원래는 여러 줄로 작성해서 초기화 할 것을 한 줄로 초기화 가능하다는 장점이 있음
a = [i for i in range(10)]
print("리스트 컴프리헨션:",a)

# 0부터 19까지 수 중 홀수만 포함하는 리스트(리스트 컴프리헨션)
array = [i for i in range(20) if i % 2 == 1]
print("리스트 컴프리헨션 - 조건문 이용",array)

# 1부터 9까지의 수들의 제곱 값을 포함하는 리스트(리스트 컴프리헨션)
array = [i*i for i in range(1,10)]
print("리스트 컴프리헨션 - 제곱값",array)

# 2차원 리스트 초기화(리스트 컴프리헨션)
# n*m(4*3) 2차원 리스트 초기화
n = 4
m = 3

# 옳은 초기화 방법
array = [[0]*m for _ in range(n)]
array[1][1] = 9
print("2차원 리스트 옳은 초기화:",array,sep="\n")

# 잘못된 초기화 방법 -> 같은 주소값 가져서 다른 행의 리스트도 같이 조작됨
array = [[0]*m]*n
array[1][1] = 9
print("2차원 리스트 잘못된 초기화:",array,sep="\n")




# 인덱싱과 슬라이싱
# 인덱싱 : 리스트 원소에 접근하기

# 인덱싱은 -1, -2, ... 으로 역순 접근 가능한 것 기억해두자

# 뒤에서 3번째 원소 접근
print("뒤에서 3번째 원소 접근:",a[-3])

# 슬라이싱 : 연속적인 위치를 갖는 원소를 가져올 때 이용
# 시작 인덱스는 그대로, 끝 인덱스는 실제 인덱스보다 1 크게 설정

# 2번째 인덱스 ~ 4번째 인덱스 출력
print("2번째 ~ 4번째 인덱스:",a[2:5])




# 리스트에서 자주 사용되는 메서드
a = [1,4,3]
print("기본 리스트:",a)
# 1. .append() : 리스트에 원소 하나 삽입할 때 사용
# 시간복잡도 : O(1)
a.append(2)
print("삽입:",a)

# 2. .sort() : 오름차순 정렬 (.sort(reverse=True) : 내림차순 정렬)
# 시간복잡도 : O(NlogN)
a.sort()
print("오름차순 정렬:",a)

a.sort(reverse=True)
print("내림차순 정렬:",a)

# 3. reverse() : 리스트의 원소의 순서를 모두 뒤집어 놓음
# 시간복잡도 : O(N)
a.reverse()
print("원소 뒤집기:",a)

# 4. insert() : 특정한 인덱스 위치에 원소 삽입
# 시간복잡도 : O(N)
a.insert(2,3)
print("인덱스 2에 3 추가:",a)

# 5. count() : 리스트에서 특정한 값을 가지는 데이터의 개수를 셀 때 사용
# 시간복잡도 : O(N)
print("값이 3인 데이터 개수: ",a.count(3))

# 6. remove() : 특정한 값을 갖는 원소 제거, 해당하는 원소가 여러 개일 경우 1개만 제거
# 시간복잡도 : O(N)
# - 1개만 제거하므로 모두 or 여러 개 제거 시에는 따로 코드 작성 필요
a.remove(1)
print("값이 1인 데이터 삭제:",a)

# 특정 값을 가지는 원소 모두 제거
a = [1,2,3,4,5,5,5]
remove_set = {3,5} # 집합 자료형 -> 특정 원소의 존재 유무만을 확인할 때 유용
print("기존:",a)

# remove_set에 포함X인 값만 저장
result = [i for i in a if i not in remove_set]
print(f"{remove_set} 값 제거 후:",result)